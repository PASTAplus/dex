#!/usr/bin/env python

"""Stub for trying out customizations to the report generated by Pandas Profiling
"""

import pathlib
import subprocess

import pandas as pd
import pandas_profiling

csv_path = './test-pandas-profiling-interactions-fast.csv'
config_path = './profiling_config.yml'

print(csv_path)
print(config_path)

df = pd.read_csv(csv_path)

# Create a tree representation of the report.
report_tree = pandas_profiling.ProfileReport(df, config_file=config_path)

section_list = report_tree.report.content["body"].content["items"]

section_list[0].content['items'][1].content['name'] = 'Notes'

# pprint.pprint(section_list[0].content)

# sys.exit()

section_list[0].content['items'][1].content['items'][1] = 'Notes'
# .content['name'] = 'Notes'

section_list[0].content['items'][2].content['name'] = 'Reproducibility'

section_list[0].content['items'][2].content['items'][0].content['name'] = 'Reproducibility'

section_list.insert(1, section_list.pop(-1))

# Render the tree to HTML
html_str = report_tree.to_html()

# Return the profile report HTML doc to caller via stdout
# print(html_str)
print(f'html_str_len: {len(html_str)}')

pathlib.Path('/tmp/out.html').write_text(html_str)
subprocess.run(['firefox', '/tmp/out.html'])
